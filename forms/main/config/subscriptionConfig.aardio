import fonts.fontAwesome;
import win.ui;
/*DSG{{*/
var winform = win.form(text="aardio form";right=892;bottom=564;bgcolor=16777215)
winform.add(
btnAdd={cls="plus";text="添加订阅";left=10;top=4;right=143;bottom=31;align="left";dl=1;dt=1;font=LOGFONT(h=-15);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=12}};iconText='\uF196 ';notify=1;textPadding={left=30};z=5};
btnRemove={cls="plus";text="移除选中订阅";left=143;top=4;right=290;bottom=31;align="left";dl=1;dt=1;font=LOGFONT(h=-15);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=12}};iconText='\uF014';notify=1;textPadding={left=30};z=6};
btnUpdate={cls="plus";text="更新订阅";left=726;top=512;right=848;bottom=548;align="left";bgcolor=11580047;db=1;dr=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=22}};iconText='\uF0C7';notify=1;textPadding={left=40};z=1};
chkAll={cls="plus";text="全部启用";left=11;top=489;right=118;bottom=520;align="left";bgcolor=16777215;db=1;dl=1;font=LOGFONT(h=-16);iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome')};iconText='\uF0C8';notify=1;textPadding={left=19};z=3};
chkAutoRefreshSubscription={cls="plus";text="允许出站服务器异常自动刷新订阅";left=11;top=524;right=527;bottom=555;align="left";bgcolor=16777215;db=1;dl=1;dr=1;font=LOGFONT(h=-16);iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome')};iconText='\uF0C8';notify=1;textPadding={left=19};z=2};
listview={cls="listview";left=10;top=36;right=883;bottom=477;db=1;dl=1;dr=1;dt=1;edge=1;fullRow=1;gridLines=1;z=4};
static={cls="static";text="双击上面单元格可直接编辑";left=678;top=486;right=848;bottom=507;align="right";color=10789024;db=1;dr=1;transparent=1;z=7}
)
/*}}*/

import style;
import  xray.outbounds;

winform.chkAutoRefreshSubscription.skin(style.checkBox);  
winform.chkAll.skin(style.checkBox); 
winform.btnAdd.skin(style.plainButton);

winform.listview.insertColumn("",20) 
winform.listview.insertColumn("状态",50) 
winform.listview.insertColumn("备注",150) 
winform.listview.insertColumn("订阅地址",-1) 
winform.listview.enableDoubleBuffering();
winform.listview.checkbox = true;
winform.listview.gridLines = 0;

import win.ui.grid;
var grid = win.ui.grid(winform.listview);//创建数据视图
grid.readonlyColums = { [1] = true;[2] = true };
	
import config;
import inet.url;
var isOnCheckAll =0;
	
var reloadSubscriptions = function(){	
	isOnCheckAll =1;
	
	winform.chkAutoRefreshSubscription.checked = config.subscribe.autoRefreshSubscription; 
	config.subscribe.subscribeUrls.fields =  {"";"checked";"ps";"url";} 
	var cfgSubscribeUrls = config.subscribe.subscribeUrls;
	var chkAll = true;
	var checked = {}
	for(i=#cfgSubscribeUrls;1;-1){
		var sub = cfgSubscribeUrls[i] 
		if(sub.checked=="启用"){ 
			table.push(checked,i)
		}
		else {
			chkAll = false;
		}
	} 
	winform.chkAll.checked = chkAll;
	
	grid.setTable( cfgSubscribeUrls );
	winform.listview.checked = checked;	
	
	isOnCheckAll =0;
} 
reloadSubscriptions();

winform.loadSubscriptionsOnce = function(){
	reloadSubscriptions();
	winform.loadSubscriptionsOnce = function(){};
}

subscribe("uiCommand.subscriptionNew",function(subItem,existIndex){
	if(existIndex){ 
		winform.listview.setItemText(subItem.url,existIndex,4); 	
		winform.listview.setChecked(existIndex,true);
		return;
	} 
		
	var item = winform.listview.addItem({"",subItem.checked,subItem.ps,subItem.url});
	winform.listview.setChecked(item,true);
} ) 

//手动排序函数
winform.changeOrder=function(selectedItemIndex,direction,top){//direction为true则上移,false下移
    if(!selectedItemIndex) return;
    var dc = direction ? -1 : 1;
	var cfgSubscribeUrls = config.subscribe.subscribeUrls;
	var subscribes=..table.clone(config.subscribe.subscribeUrls);

	import console
	import debug
	import debug.log
/*	debug.log.print(#subscribes)
	
	debug.debug()
	console.dumpTable(subscribes)
	var temp =subscribes[2]
	subscribes[2]=subscribes[3]
	
	console.dumpTable(subscribes)
	console.dumpTable(temp)
	subscribes[3]=subscribes[temp]
	//..table.insert(subscribes,temp,3)
	console.dumpTable(subscribes)
*/
	//在配置文件中交换两个订阅的位置
	if(top){
		var temp = cfgSubscribeUrls[selectedItemIndex];
		..table.remove(cfgSubscribeUrls,selectedItemIndex);
		..table.unshift(cfgSubscribeUrls,temp);
		reloadSubscriptions();
		winform.listview.setSelected(1)
	}
	else {		
		var temp = cfgSubscribeUrls[selectedItemIndex+dc];
		//console.dumpTable(temp)
		..table.remove(cfgSubscribeUrls,selectedItemIndex+dc)
		//console.dumpTable(cfgSubscribeUrls)
		..table.insert(cfgSubscribeUrls,temp,selectedItemIndex)
		//console.dumpTable(cfgSubscribeUrls)
		if(tostring(cfgSubscribeUrls[selectedItemIndex+dc].checked) == "启用"){
			winform.listview.setChecked(selectedItemIndex+dc,true);
		}
		else {
			winform.listview.setChecked(selectedItemIndex+dc,false);
		}
		if(tostring(cfgSubscribeUrls[selectedItemIndex].checked) == "启用"){
			winform.listview.setChecked(selectedItemIndex,true);
		}
		else {
			winform.listview.setChecked(selectedItemIndex,false);
		}	
		winform.listview.setItemText(cfgSubscribeUrls[selectedItemIndex+dc].ps,selectedItemIndex+dc,3)
		winform.listview.setItemText(cfgSubscribeUrls[selectedItemIndex+dc].url,selectedItemIndex+dc,4)
		winform.listview.setItemText(cfgSubscribeUrls[selectedItemIndex].ps,selectedItemIndex,3)
		winform.listview.setItemText(cfgSubscribeUrls[selectedItemIndex].url,selectedItemIndex,4)
		
		
		
		if(tostring(temp.checked) == "启用"){
			var checked = true
		}
		//reloadSubscriptions();
		winform.listview.setSelected(selectedItemIndex,false)
		winform.listview.setSelected(selectedItemIndex+dc)
		
/*
		console.dumpTable(cfgSubscribeUrls)
		
		debug.debug()
*/
		

/*
		cfgSubscribeUrls[selectedItemIndex+dc]=subscribes[selectedItemIndex];
		cfgSubscribeUrls[selectedItemIndex]=subscribes[selectedItemIndex+dc];
*/
	}
	
	
	//debug.debug()
	//winform.listview.replaceItems(cfgSubscribeUrls)
	//config.proxy.save();
	//记录启用状态
/*
	var checked = table.array();
	for(i=#cfgSubscribeUrls;1;-1){
		var sub = cfgSubscribeUrls[i];
		if(tostring(sub.checked) == "启用"){
			table.push(checked,i);
		}
	}
	//重显订阅列表并勾选启用项
	winform.listview.setTable(cfgSubscribeUrls);
	grid.setTable(cfgSubscribeUrls);
*/
	//winform.listview.checked = checked;
	//设置选中项
	//if(top){winform.listview.setSelected(1)}
	//else {winform.listview.setSelected(selectedItemIndex+dc)}
}

//编辑变更值会触发下面的事件
grid.onEditChanged = function(text,iItem,iSubItem){
	var name = config.subscribe.subscribeUrls.fields[iSubItem] 
	var sub = config.subscribe.subscribeUrls[iItem];

	if( name==="url" ){ 
		if( text[1]=='/'#) {
			text = "https://github.com"+text;
		}
		
		if(sub && sub.ps=="订阅源"){
			import inet.url;
			var tUrl = inet.url.split(text);
			if(tUrl&&#tUrl.host){
				sub.ps = tUrl.host;
				winform.listview.setItemText(sub.ps,iItem,3);
			} 
		}
	}

	if(sub){
		sub[name] = text;
		config.subscribe.save();
	}
	else {
		winform.msgErr("错误的订阅索引")
	}
} 
//响应按键事件
import win.ui.accelerator;
var accelerator = win.ui.accelerator({
    { //按下DELETE键
        vkey = '46'; 
        oncommand = function(){
            var selectedItems = winform.listview.selected;
            if(#selectedItems){ winform.removesub(selectedItems) }
        }
    };
    {//ctrl+↑
        ctrl=true;vkey = '38'; 
        oncommand = function(){
            var selectedItems = winform.listview.selected;
            if(selectedItems[1]!=1){
                winform.changeOrder(selectedItems[1],true);
            }
        }
    };  
    {//ctrl+↓
        ctrl = true; vkey = '40'; 
        oncommand = function(){
            var selectedItems = winform.listview.selected;
            if(selectedItems[1]!=#config.proxy.subscribeUrls){
				winform.changeOrder(selectedItems[1],false); 
            }
        }
    };  
},winform);
winform.btnUpdate.skin(style.primaryButton);
winform.btnUpdate.oncommand = function(id,event){

	winform.btnUpdate.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
	config.subscribe.autoRefreshSubscription = winform.chkAutoRefreshSubscription.checked; 
	
	var outbondSubscribeUrlMap = {};
	var cfgSubscribeUrls = config.subscribe.subscribeUrls;
	if(#cfgSubscribeUrls == 0 ){
		..mainForm.msgErr("尚未导入订阅节点",1500);
		winform.btnUpdate.disabledText = null;
		return; 
	}
	for(i=#cfgSubscribeUrls;1;-1){
		var sub = cfgSubscribeUrls[i];
		// sub.checked等于启用时，outbondSubscribeUrlMap[sub.url]为true
		outbondSubscribeUrlMap[sub.url] = sub.checked=="启用";
	} 
		
	
	if(!xray.outbounds.updateSubscription()){
		//winform.btnUpdate.disabledText = null;
		
		publish("uiCommand.restartxrayCore",outbounds) 
	}
	
	winform.btnUpdate.disabledText = null;
}

winform.chkAll.oncommand = function(id,event){
	isOnCheckAll = 1;
	var checked = winform.chkAll.checked
	var count =0
	for hItem in winform.listview.each(){
		//count +=1
		winform.listview.setChecked(hItem,checked)
		//win.msgbox(count,,,,100)
	}
	config.subscribe.save();
	isOnCheckAll =0;
}

winform.btnRemove.skin(style.plainButton)
winform.btnRemove.oncommand = function(id,event){
	
	var outboundRemoved = 0;
	var subscribeUrls = config.subscribe.subscribeUrls;
	var items = winform.listview.selected;
	if(!#items){
		return winform.msgWarn("未选中任何订阅项（ 请用鼠标单击订阅链接，不是指「勾选」 ）",2000)
	}
	
	winform.btnUpdate.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
	
	for(i=#items;1;-1){
		var url = subscribeUrls[items[i]].url;
		table.remove(subscribeUrls,items[i]);
		winform.listview.delItem(items[i]);
		
		var outbounds = ..config.proxy.outbounds : ..table.array();
		for(i=#outbounds;1;-1){
			var outbound = outbounds[i]  
			if(outbound.subscribeUrl===url && outbound.ps != "已测通"){ //修改为可用的不删除
				table.remove(outbounds,i);
				outboundRemoved++;
			}
		} 
	}
	
	config.proxy.save();
	config.subscribe.save();
	
	
	if(outboundRemoved){
		//winform.btnUpdate.disabledText = null;
		publish("uiCommand.restartxrayCore") 
	}
	else {
		win.delay(200);
	}
	winform.btnUpdate.disabledText = null;

}

winform.btnAdd.oncommand = function(id,event){
	import debug.log
	import console
	//debug.log.print(url);
	
	import inet.url;
	import win.clip;
	
	var ps = "订阅源";
	var url = win.clip.read();
	//console.dump(url);

	url = url ? string.trim(url,'"\'\s\t\r\n ');
	//console.dump(url);
	url=string.split(url,'<\r\n>',);
	//console.dump(url);
	if(url ){
		for(i=1;#url;1){
			//console.dump(url[i]);
			if(url[i]=='/'#){
				if(!..string.find(url[i],"/<blob>|<raw>")){ url[i] = "https://raw.githubusercontent.com" + url[i] }
				else { url[i] = "http://github.com" + url[i]; }				
			}
			
			
			if(!inet.url.is(url[i])){
				url[i] = "";
			}
			else {
				var tUrl = inet.url.split(url[i]);
				if(tUrl && tUrl.host){
					ps = tUrl.host
				}
			} 
			
				//查重
			var repeat = -1;
			var cfgSubscribeUrls = config.subscribe.subscribeUrls;
			for(j=1;#cfgSubscribeUrls;1){
				if(cfgSubscribeUrls[j].url == url[i]){
					repeat = j;
					break;
				}
			}
			if(repeat && (repeat!==-1)){
				winform.listview.setChecked(repeat,true);
				..mainForm.msgOk('此订阅与第 '+repeat+' 个订阅重复\n已将此订阅设为"启用"',500);
				//winform.msgFrown('此订阅与第 '+repeat+' 个订阅重复\n已将此订阅设为"启用"');
				continue ; 
			}
			
			
			
			config.subscribe.subscribeUrls[winform.listview.count+1] = {checked="启用";ps=ps;url=url[i]}
			var item = winform.listview.addItem({
				"";"启用";ps;url[i]
			})
			
			winform.listview.setChecked(item,true);
			grid.beginEdit(item,4);	
		
		}	
	}
	
	
	
	
}

winform.listview.onnotify = function(id,code,ptr){  
	if( code == 0xFFFFFF9B/*_LVN_ITEMCHANGED*/ ){ 
		var nmListView = winform.listview.getNotifyMessage(code,ptr);
		if( !nmListView )
			return;
			
		if( nmListView.uNewState & 0xF000/*_LVIS_STATEIMAGEMASK*/){
			var selIndex = nmListView.iItem;
			if( winform.listview.getChecked( selIndex ) ){
				config.subscribe.subscribeUrls[selIndex].checked = "启用";
				if (!isOnCheckAll ) config.subscribe.save();
				
				winform.listview.setItemText("启用",selIndex,2);
			}
			else {
				config.subscribe.subscribeUrls[selIndex].checked = "禁用";
				if (!isOnCheckAll ) config.subscribe.save();
				
				winform.listview.setItemText("禁用",selIndex,2); 
			} 
			
			var chkAll = true; 
			for(i=#config.subscribe.subscribeUrls;1;-1){
				var sub = config.subscribe.subscribeUrls[i] 
				if(sub.checked!="启用"){ 
					chkAll = false;
				}
			} 
				
			winform.chkAll.checked = chkAll;
		}  
	}
	elseif( code ==  0xFFFFFFF4/*_NM_CUSTOMDRAW*/ ) {
		var lvcd = winform.listview.getNotifyCustomDraw(code,ptr);
		if( lvcd.nmcd.dwDrawStage == 0x10001/*_CDDS_ITEMPREPAINT*/)
			return 0x20/*_CDRF_NOTIFYSUBITEMDRAW*/
		elseif( lvcd.nmcd.dwDrawStage == 1/*_CDDS_PREPAINT*/ ){
			return 0x20/*_CDRF_NOTIFYITEMDRAW*/;
		}
		elseif( lvcd.nmcd.dwDrawStage == ( 0x10001/*_CDDS_ITEMPREPAINT*/ | 0x20000/*_CDDS_SUBITEM*/) ){ 
			//注意这里 iSubItem 的索引自0开始( 其他函数通常自1开始 )
			lvcd.clrText = lvcd.nmcd.dwItemSpec % 2 ? 0x373737 : 0;
			lvcd.clrTextBk = lvcd.nmcd.dwItemSpec % 2 ? 0xFFFFFF : 0xF5F5F5;
			lvcd.update();
			
			return 0/*_CDRF_DODEFAULT*/
		}
	}
	elseif( code ==  0xFFFFFFFB/*_NM_RCLICK*/ )  {
		var x,y = win.getCursorPos();
		var nm = winform.listview.getNotifyMessage(code,ptr);
		if(!nm) return;
		
		var currentIdx = nm.iItem;
		// 没有选中item时的菜单
		if(!currentIdx){
			var popmenu = win.ui.popmenu(winform);
			
			popmenu.add('全部删除',function(id){ 
    		for(i=1; winform.listview.count)  winform.listview.setSelected(i,true);
				winform.btnRemove.oncommand();
			});
			popmenu.add('自剪贴板添加订阅',function(id){ 
    			winform.btnAdd.oncommand();
			});
			
			// 弹出菜单
			popmenu.popup(x,y,true);
			return;
		}
		
		// 有选中item时的菜单
		var selectedItems = winform.listview.selected;
		var popmenu = win.ui.popmenu(winform);
		if(#selectedItems==1){
			popmenu.add('更新当前订阅',function(id){
				var cfgSubscribeIndex = selectedItems[1]
				var currentSubscribeUrl = config.subscribe.subscribeUrls[cfgSubscribeIndex]['url'];
				config.subscribe.subscribeUrls[cfgSubscribeIndex].checked = "启用";
				config.subscribe.save();
				winform.listview.setChecked(currentIdx,true)
				winform.listview.setItemText("启用",currentIdx,2);
				xray.outbounds.updateSubscription({[currentSubscribeUrl]=true});
			});
			popmenu.add()
			
			if(selectedItems[1]!=1){
				popmenu.add("上移至顶",function(){
					winform.changeOrder(selectedItems[1],,true);
				})
				popmenu.add('上移(ctrl+↑)',function(id){
					winform.changeOrder(selectedItems[1],true);
				})
			}
			if(selectedItems[1]!=#config.proxy.subscribeUrls){
				popmenu.add('下移(ctrl+↓)',function(id){
					winform.changeOrder(selectedItems[1],false); 
				})
			}
			
			popmenu.add();
		}
		popmenu.add('删除选中',function(id){
			winform.btnRemove.oncommand();
		});
		popmenu.add('全部删除',function(id){ 
    	for(i=1; winform.listview.count)  winform.listview.setSelected(i,true);
			winform.btnRemove.oncommand();
		});
		popmenu.add('自剪贴板添加订阅',function(id){ 
    		winform.btnAdd.oncommand();
		});
		
		// 弹出菜单
		popmenu.popup(x,y,true);
	}
}

winform.show();
win.loopMessage();
return winform;